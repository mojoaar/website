<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Tech[Net]</title>
        <link>https://technet.cc/posts/</link>
        <description>Recent content in Posts on Tech[Net]</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 19 Jun 2022 16:28:46 +0200</lastBuildDate>
        <atom:link href="https://technet.cc/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Predictive Intellisense in PowerShell</title>
            <link>https://technet.cc/posts/2022/06/predictive-intellisense-in-powershell/</link>
            <pubDate>Sun, 19 Jun 2022 16:28:46 +0200</pubDate>
            
            <guid>https://technet.cc/posts/2022/06/predictive-intellisense-in-powershell/</guid>
            <description>Introduction If you are using PowerShell (pwsh) on a daily basis like me, you should take a look at enabling Predictive IntelliSense in your pwsh prompt. It was announced in late 2020 but I dont think that many people are aware and have it enabled in their pwsh profile. You can think of Predictive IntelliSense like taking tab completion to the next level.
How to  Check that you have (PSReadLine) minimum version 2.</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>If you are using PowerShell (pwsh) on a daily basis like me, you should take a look at enabling Predictive IntelliSense in your pwsh prompt. It was announced in <a href="https://devblogs.microsoft.com/powershell/announcing-psreadline-2-1-with-predictive-intellisense/">late 2020</a> but I dont think that many people are aware and have it enabled in their pwsh profile. You can think of Predictive IntelliSense like taking tab completion to the next level.</p>
<h2 id="how-to">How to</h2>
<ol>
<li>Check that you have (PSReadLine) minimum version 2.1.0 installed.</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">Get-Module -ListAvailable -Name PSReadLine
</code></pre></div><ol start="2">
<li>If not install/update it from PowerShell Gallery.</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">Find-Module PSReadLine -Repository PSGallery
</code></pre></div><ol start="3">
<li>Import the module to your pwsh session.</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">Import-Module PSReadLine
</code></pre></div><ol start="4">
<li>Set PSReadLine option (add it to your $profile so it will load on each new session).</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">Set-PSReadLineOption -PredictionSource History -PredictionViewStyle ListView
</code></pre></div><h2 id="screenshots">Screenshots</h2>
<p>Find the module on PoserShell Gallery.
<a href="/img/posts/psreadline.png"><img src="/img/posts/psreadline.png" alt="PSReadLine"></a></p>
<p>Using Predictive IntelliSense from your prompt.
<a href="/img/posts/psreadline2.png"><img src="/img/posts/psreadline2.png" alt="PSReadLine"></a></p>
]]></content>
        </item>
        
        <item>
            <title>Cryptgeon</title>
            <link>https://technet.cc/posts/2022/06/cryptgeon/</link>
            <pubDate>Thu, 02 Jun 2022 15:48:41 +0200</pubDate>
            
            <guid>https://technet.cc/posts/2022/06/cryptgeon/</guid>
            <description>Introduction If you are sharing passwords or other sensitive data over IM, email etc. you should take a look at this free web application. The application is called cryptgeon and is developed by a guy called Nicco. The application will only keep the shared secrets/files in memory and not write the data to disk. You can have a look at his GitHub repo here or see the screenshot below for the UI.</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>If you are sharing passwords or other sensitive data over IM, email etc. you should take a look at this free web application. The application is called cryptgeon and is developed by a guy called <a href="https://github.com/cupcakearmy">Nicco</a>. The application will only keep the shared secrets/files in memory and not write the data to disk. You can have a look at his GitHub repo <a href="https://github.com/cupcakearmy/cryptgeon">here</a> or see the screenshot below for the UI.</p>
<p><a href="/img/posts/cryptgeon.png"><img src="/img/posts/cryptgeon.png" alt="cryptgeon"></a></p>
<h2 id="docker-compose">Docker Compose</h2>
<p>If you are using docker engine and docker-compose here&rsquo;s the compose file I&rsquo;m using to run the application.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">version</span>: <span style="color:#e6db74">&#39;3.7&#39;</span>

<span style="color:#f92672">services</span>:
  <span style="color:#f92672">memcached</span>:
    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">memcached:1-alpine</span>
    <span style="color:#f92672">entrypoint</span>: <span style="color:#ae81ff">memcached -m 128M -I 4M</span> <span style="color:#75715e"># Limit to 128 MB Ram, 4M per entry, customize at free will.</span>

  <span style="color:#f92672">app</span>:
    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">cupcakearmy/cryptgeon:latest</span>
    <span style="color:#f92672">depends_on</span>:
      - <span style="color:#ae81ff">memcached</span>
    <span style="color:#f92672">environment</span>:
      <span style="color:#f92672">SIZE_LIMIT</span>: <span style="color:#ae81ff">4M</span>
    <span style="color:#f92672">ports</span>:
      - <span style="color:#ae81ff">82</span>:<span style="color:#ae81ff">5000</span>
    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped</span>
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Code Server</title>
            <link>https://technet.cc/posts/2022/05/code-server/</link>
            <pubDate>Fri, 13 May 2022 18:44:42 +0200</pubDate>
            
            <guid>https://technet.cc/posts/2022/05/code-server/</guid>
            <description>Introduction I&amp;rsquo;ve been using VS Code as my primary editor for years and love using it. Emagine taking that experience to the browser and running VS Code with a consistent development environment?&amp;hellip;you can - with the docker engine and code-server! Actually this how I manage and maintain my site here at technet.cc. Thanks to the good folks at linuxserver.io who have made a ready to run container it is super easy getting it setup and running with the docker engine &amp;amp; docker-compose.</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>I&rsquo;ve been using VS Code as my primary editor for years and love using it. Emagine taking that experience to the browser and running VS Code with a consistent development environment?&hellip;you can - with the docker engine and <a href="https://github.com/coder/code-server">code-server</a>! Actually this how I manage and maintain my site here at <a href="https://technet.cc">technet.cc</a>. Thanks to the good folks at <a href="https://www.linuxserver.io/">linuxserver.io</a> who have made a ready to run <a href="https://fleet.linuxserver.io/image?name=linuxserver/code-server">container</a> it is super easy getting it setup and running with the docker engine &amp; docker-compose. In the compose file below I make sure to map in my homedir, so I can access the files located in the development folder. The site is running on <a href="https://gohugo.io/">Hugo</a> and I have it setup against GitHub for source control. The VS Code terminal is connected to the actual VPS thru ssh, so I have access to all the Hugo command for publishing.</p>
<h2 id="docker-compose">Docker Compose</h2>
<p>If you are using docker engine and docker-compose here&rsquo;s the compose file I&rsquo;m using to run the application.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">version</span>: <span style="color:#e6db74">&#34;2.1&#34;</span>
<span style="color:#f92672">services</span>:
  <span style="color:#f92672">code-server</span>:
    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">lscr.io/linuxserver/code-server:latest</span>
    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">code-server</span>
    <span style="color:#f92672">environment</span>:
      - <span style="color:#ae81ff">PUID=1000</span>
      - <span style="color:#ae81ff">PGID=1000</span>
      - <span style="color:#ae81ff">TZ=Europe/Copenhagen</span>
      - <span style="color:#ae81ff">PASSWORD=SuperSecretPassword</span> <span style="color:#75715e">#optional</span>
      - <span style="color:#ae81ff">HASHED_PASSWORD=</span> <span style="color:#75715e">#optional</span>
      - <span style="color:#ae81ff">SUDO_PASSWORD=SuperSecretPassword</span> <span style="color:#75715e">#optional</span>
      - <span style="color:#ae81ff">SUDO_PASSWORD_HASH=</span> <span style="color:#75715e">#optional</span>
      - <span style="color:#ae81ff">PROXY_DOMAIN=code.domain.com</span> <span style="color:#75715e">#optional</span>
      - <span style="color:#ae81ff">DEFAULT_WORKSPACE=/config/workspace</span> <span style="color:#75715e">#optional</span>
    <span style="color:#f92672">volumes</span>:
      - <span style="color:#ae81ff">/home/&lt;username&gt;/code-server/config:/config</span>
      - <span style="color:#ae81ff">/home/&lt;username&gt;/development:/development</span>
    <span style="color:#f92672">ports</span>:
      - <span style="color:#ae81ff">8443</span>:<span style="color:#ae81ff">8443</span>
    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped</span>
</code></pre></div><h2 id="screenshots">Screenshots</h2>
<p>Working on this actual blog post in the browser with code server.
<a href="/img/posts/code-server.png"><img src="/img/posts/code-server.png" alt="Code Server"></a></p>
]]></content>
        </item>
        
        <item>
            <title>Docker Hosting</title>
            <link>https://technet.cc/posts/2022/05/docker-hosting/</link>
            <pubDate>Thu, 05 May 2022 09:07:02 +0200</pubDate>
            
            <guid>https://technet.cc/posts/2022/05/docker-hosting/</guid>
            <description>Introduction All of the my lab &amp;amp; hosting needs are done thru various open source products. I like using docker engine &amp;amp; docker-compose for quickly getting products spun up. I&amp;rsquo;ve had a look at using k8s instead, but for home usage and my needs I think it is to much. In the setup I also have a external vps which is hosting this website as one of the products. Below I&amp;rsquo;ll run thu all the products I&amp;rsquo;m using.</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>All of the my lab &amp; hosting needs are done thru various open source products. I like using docker engine &amp; docker-compose for quickly getting products spun up. I&rsquo;ve had a look at using <a href="https://kubernetes.io">k8s</a> instead, but for home usage and my needs I think it is to much. In the setup I also have a external vps which is hosting this website as one of the products. Below I&rsquo;ll run thu all the products I&rsquo;m using.</p>
<h2 id="architecture-overview">Architecture Overview</h2>
<p>Below is an overview of how I have done my setup. Basicly all vm/lxc&rsquo;s are deployed with Ubuntu 22.04, then docker-engine and docker-compose, portainer ce for controling the environments from one central location and nginx proxy manager to control url&rsquo;s, certificates (let&rsquo;s encrypt) and routing to hosts.</p>
<pre tabindex="0"><code>proxmox-ha-cluster  
│
└───proxmox-host1
│   │
│   └───proxmox-vm
│       │   docker-engine
│       │   docker-compose
│       │   portainer-main
│       │   nginx-proxymanager
│       │   app-a
│       │   app-b
│       │   app-c
│
└───proxmox-host2
│   │
│   └───proxmox-lxc
│       │   docker-engine
│       │   docker-compose
│       │   portainer-agent
│       │   nginx-proxymanager
│       │   app-a
│       │   app-b
│       │   app-c
│
external-kvm-host
│
└───external-vps
    │
    └───external-vm
        │   docker-engine
        │   docker-compose
        │   portainer-agent
        │   nginx-proxymanager
        │   app-a
        │   app-b
        │   app-c
</code></pre><h2 id="proxmox">Proxmox</h2>
<p>I use <a href="https://www.proxmox.com/en/">Proxmox</a> as the hypervisor at home. I switches from VMware ~2 years ago and have not looked back since. One of the benefits I like with Proxmox is the ability to deploy LXC containers out of the box. I have 2 hosts at home, setup in a HA Cluster for failover.</p>
<h2 id="docker--docker-compose">Docker &amp; docker-compose</h2>
<p>I think <a href="https://www.docker.com/">docker</a> is known to most people working with container environments. Together with docker compose, it is perfect for quickly deploying new apps in your infrastructure.</p>
<h2 id="portainer-ce">Portainer CE</h2>
<p><a href="https://www.portainer.io/">Portainer</a> is a container management platform. It comes in 2 flavours, a paid (business) edition and then the free one called portainer ce. In my own setup I have 1 portainer ce app running, and then the 2 other hosts are linked up thru the portainer agent.</p>
<h2 id="nginx-proxy-manager">Nginx Proxy Manager</h2>
<p><a href="https://nginxproxymanager.com/">Nginx Proxy Manager</a> is (as the name states) a proxy manager similar to <a href="https://traefik.io">Traefik</a>. I use it on all the docker engine hosts to control certificates, routing &amp; all the url&rsquo;s.</p>
<h2 id="links--resources">Links &amp; Resources</h2>
<p>Below you can find some usefull links and doc&rsquo;s to get started on a setup similar to the above.</p>
<h3 id="proxmox-1">Proxmox</h3>
<p><a href="https://pve.proxmox.com/wiki/Installation">Install Proxmox VE</a><br>
<a href="https://github.com/Weilbyte/PVEDiscordDark">Dark theme for Proxmox VE</a><br>
<a href="https://johnscs.com/remove-proxmox51-subscription-notice/">Remove Proxmox subscription warning</a></p>
<h3 id="docker--docker-compose-1">Docker &amp; docker-compose</h3>
<p><a href="https://docs.docker.com/engine/install/ubuntu/">Install docker engine on Ubuntu</a><br>
<a href="https://docs.docker.com/compose/install/compose-plugin/">Install docker compose on Ubuntu</a></p>
<h3 id="nginx-proxy-manager-1">Nginx Proxy Manager</h3>
<p><a href="https://nginxproxymanager.com/setup/">Install Nginx Proxy Manager</a></p>
<h2 id="screenshots">Screenshots</h2>
<p>Portainer CE UI.
<a href="/img/posts/portainer.png"><img src="/img/posts/portainer.png" alt="Portainer"></a></p>
]]></content>
        </item>
        
    </channel>
</rss>
